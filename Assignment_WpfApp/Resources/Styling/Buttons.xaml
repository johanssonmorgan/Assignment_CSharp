<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Register all styling files in App.xaml -->
    <!-- To bind the style to a button use StaticResource like following example:
         <Button Style="{StaticResource PlaceholderButtonStyling}"> -->
    
    <!-- Here is a few button templates from Hans video to have as a reference and see the genereal structure -->
    
    
    <!-- Exit button template with hover effect -->
    <Style x:Key="PlaceholderButtonStyling" TargetType="Button">
        <Setter Property="Content" Value="&#xE7E8;" />
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="#9FABBD" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="20 0 20 0" />
        
        
        <!-- Following is setter to control hover effect on a button: -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder">
                        <TextBlock x:Name="ContentText" 
                            Text="{TemplateBinding Content}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontWeight="{TemplateBinding FontWeight}"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="{TemplateBinding Foreground}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentText" Property="Foreground" Value="#FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ContentText" Property="Foreground" Value="#FFDD55" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    <!-- Standard button template with rounded corners and hover effect -->
    <Style x:Key="StandardButtonWithRoundedCorners" TargetType="Button">
        <Setter Property="Padding" Value="15" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Background" Value="#FFF400" />
        <Setter Property="Foreground" Value="#613C03" />

        <!-- Following is setter to get rounded corners on a button, combined with hover effect -->
        
        <!-- First ControlTemplate is overall design with rounded corners, we have to use a border in order to have corner radius.
        
             ControlTemplate.Triggers is triggers to get the hover effect to work: -->
        
        <Setter Property="Template">
            <Setter.Value>
                
                <ControlTemplate TargetType="Button">
                    <Border 
                        x:Name="ButtonBorder" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding Background}" 
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="25">

                        <TextBlock 
                            x:Name="ContentText"
                            Text="{TemplateBinding Content}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="{TemplateBinding FontWeight}"
                            FontFamily="{TemplateBinding FontFamily}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#FFFFFF" />
                            <Setter TargetName="ContentText" Property="Foreground" Value="#613C03" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#EAD400" />
                            <Setter TargetName="ContentText" Property="Foreground" Value="#613C03" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>
    
    
    
    <!-- Standard cancel button template -->
    <Style x:Key="CancelButton" TargetType="Button">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#9FABBD" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder">
                        <TextBlock x:Name="ContentText"
                                   Text="{TemplateBinding Content}"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontWeight="{TemplateBinding FontWeight}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Background="{TemplateBinding Background}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentText" Property="Foreground" Value="#FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ContentText" Property="Foreground" Value="#EAD400" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    
    
</ResourceDictionary>